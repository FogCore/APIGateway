syntax = "proto3";

// Users Service methods used by the API Gateway
service UsersAPI {
  rpc IsExist (User) returns (Response) {}  // Checks the existence of a user with the specified username
  rpc Create (User) returns (ResponseWithUser) {}  // Creates a new user
  rpc Verify (User) returns (ResponseWithUser) {}  // Verifies username and password
  rpc Info (User) returns (ResponseWithUser) {}  // Returns information about the user
  rpc UpdateUserData (User) returns (ResponseWithUser) {}  // Sets the full user name and administrator rights
  rpc UpdatePassword (User) returns (Response) {}  // Sets new user password
}

message User {
  string username = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  bool admin = 5;
}

message Response {
  int32 code = 1;
  string message = 2;
}

message ResponseWithUser {
  Response status = 1;
  User user = 2;
}


// Images Service methods used by the API Gateway
service ImagesAPI {
  rpc List (User) returns (ResponseWithImagesList) {}  // Returns the list of fog application images
  rpc Find (Image) returns (ResponseWithImage) {}  // Returns information about specified image of fog application
  rpc Delete (Image) returns (Response) {}  // Removes the image of fog application
}

message Image {
  string type = 1;
  string name = 2;
  int64 updated = 3;
  repeated string tags = 4;
  repeated string actions = 5;
}

message Images {
  string username = 1;
  repeated Image list = 2;
}

message ResponseWithImage {
  Response status = 1;
  Image image = 2;
}

message ResponseWithImagesList {
  Response status = 1;
  repeated Images images = 2;
}


// Cloudlets Service methods used by the API Gateway
service CloudletsAPI {
  rpc Find (Cloudlet) returns (ResponseWithCloudletsList) {}  // Returns a list of fog devices with the specified parameters
}

message Cloudlet {
  string id = 1;
  string name = 2;
  uint32 cpu_cores = 3;
  float cpu_frequency = 4;
  uint64 ram_size = 5;
  uint64 rom_size = 6;
  string os = 7;
  string os_kernel = 8;
  string ip = 9;
  double latitude = 10;
  double longitude = 11;
  string country = 12;
  string region = 13;
  string city = 14;
}

message ResponseWithCloudletsList {
  Response status = 1;
  repeated Cloudlet cloudlets = 2;
}


// Scheduling Service methods used by the API Gateway
service SchedulingAPI {
  rpc CreateCluster (Cluster) returns (ResponseWithCluster) {}  // Creates a new cluster of IoT devices
  rpc ClusterState (Cluster) returns (ResponseWithCluster) {}  // Returns the cluster state of IoT devices
  rpc RemoveCluster (Cluster) returns (Response) {}  // Removes an existing IoT device cluster
}

message ExposedPort {
  uint32 published_port = 1;
  uint32 target_port = 2;
  string protocol = 3;
}

message Coordinates {
  float latitude = 1;
  float longitude = 2;
}

message Cluster {
  string id = 1;
  string image = 2;
  string cloudlet_ip = 3;
  string state = 4;
  repeated ExposedPort exposed_ports = 5;
  Coordinates coordinates = 6;
}

message ResponseWithCluster {
  Response status = 1;
  Cluster cluster = 2;
}
